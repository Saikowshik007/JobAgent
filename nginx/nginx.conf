events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Security headers (no HSTS for IP-based access)
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # Upstream to your FastAPI backend
    upstream jobtrak_api {
        server jobtrak-api:8000;  # This points to your FastAPI container
    }

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name _;  # Accept any IP address

        # Health check on HTTP (for load balancers/monitoring)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server for your API
    server {
        listen 443 ssl;
        http2 on;
        server_name _;  # Accept any IP address

        # SSL certificate configuration
        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        # SSL configuration optimized for IP-based access
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;

        # Allow larger uploads for resume files
        client_max_body_size 50M;

        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;

        # API endpoints with CORS for Vercel
        location /api/ {
            limit_req zone=api burst=20 nodelay;

            # Hide backend CORS headers to prevent conflicts
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Max-Age;

            # CORS configuration for your Vercel app
            set $cors_origin "";
            set $cors_credentials "false";

            # Allow your specific Vercel domain
            if ($http_origin = "https://job-agent-ui.vercel.app") {
                set $cors_origin $http_origin;
                set $cors_credentials "true";
            }

            # Allow all Vercel domains (if you have multiple deployments)
            if ($http_origin ~* "^https://.*\.vercel\.app$") {
                set $cors_origin $http_origin;
                set $cors_credentials "true";
            }

            # Allow localhost for development
            if ($http_origin ~* "^https?://localhost:3000$") {
                set $cors_origin $http_origin;
                set $cors_credentials "true";
            }

            # Allow 127.0.0.1 for development
            if ($http_origin ~* "^https?://127\.0\.0\.1:3000$") {
                set $cors_origin $http_origin;
                set $cors_credentials "true";
            }

            # Fallback for direct API access (tools like Postman, curl)
            if ($cors_origin = "") {
                set $cors_origin "*";
                set $cors_credentials "false";
            }

            # Set CORS headers
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Api-Key,x-api-key,X-User-Id,x_user_id,x-user-id,Accept,Origin' always;
            add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
            add_header 'Access-Control-Max-Age' '86400' always;

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Api-Key,x-api-key,X-User-Id,x_user_id,x-user-id,Accept,Origin' always;
                add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
                add_header 'Access-Control-Max-Age' '86400' always;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Proxy to FastAPI backend
            proxy_pass http://jobtrak_api;
        }

        # Root endpoint (FastAPI docs, health checks, etc.)
        location / {
            # Basic CORS for direct browser access
            add_header 'Access-Control-Allow-Origin' '*' always;

            # Proxy to FastAPI backend
            proxy_pass http://jobtrak_api;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
            add_header 'Access-Control-Allow-Origin' '*' always;
        }

        # FastAPI docs endpoints (optional, for development)
        location /docs {
            proxy_pass http://jobtrak_api;
        }

        location /redoc {
            proxy_pass http://jobtrak_api;
        }

        location /openapi.json {
            proxy_pass http://jobtrak_api;
        }
    }
}