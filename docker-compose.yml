# Simple JobTrak Scaling - Multiple API Instances with Load Balancing
version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    container_name: jobtrak-traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # Let's Encrypt configuration
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=askowshik@outlook.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # Redirect HTTP to HTTPS
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      # Logging
      - "--log.level=INFO"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - jobtrak-network
    restart: unless-stopped

  # API Instance 1
  jobtrak-api-1:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: jobtrak-api-1
    volumes:
      - .:/app
      - ./database:/app/database
      - ./output:/app/output
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - jobtrak-network
    environment: &api-environment
      # Application settings
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - API_DEBUG=1
      - HOST_IP=${HOST_IP:-auto-detect}

      # External services
      - SELENIUM_REMOTE_URL=http://selenium-chrome:4444/wd/hub
      - SIMPLIFY_JOBS_API_URL=https://api.simplify.jobs/v2
      - SIMPLIFY_SITE_KEY=6LcStf4UAAAAAIVZo9JUJ3PntTfRBhvXLKBTGww8

      # Database configuration (PostgreSQL)
      - DATABASE_URL=postgresql://jobtrak_user:jobtrak_secure_password_2024@postgres:5432/jobtrak
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=jobtrak
      - POSTGRES_USER=jobtrak_user
      - POSTGRES_PASSWORD=jobtrak_secure_password_2024

      # Redis configuration
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CACHE_TTL=3600

      # LinkedIn credentials
      - LINKEDIN_EMAIL=saianantula007@outlook.com
      - LINKEDIN_PASSWORD=Saikowshik@2000

      # OpenAI configuration
      - OPENAI_API_KEY=your_openai_api_key
      - MODEL_PROVIDER=openai
      - MODEL_NAME=gpt-4.1-mini
      - MODEL_TEMPERATURE=0.3
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`jobtrackai.duckdns.org`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=8000"

      # Load balancer health checks
      - "traefik.http.services.api.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.api.loadbalancer.healthcheck.interval=10s"

      # HTTP to HTTPS redirect
      - "traefik.http.routers.api-http.rule=Host(`jobtrackai.duckdns.org`)"
      - "traefik.http.routers.api-http.entrypoints=web"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.api-http.middlewares=https-redirect"

  # API Instance 2
  jobtrak-api-2:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: jobtrak-api-2
    volumes:
      - .:/app
      - ./database:/app/database
      - ./output:/app/output
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - jobtrak-network
    environment:
      # Application settings
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - API_DEBUG=1
      - HOST_IP=${HOST_IP:-auto-detect}

      # External services
      - SELENIUM_REMOTE_URL=http://selenium-chrome:4444/wd/hub
      - SIMPLIFY_JOBS_API_URL=https://api.simplify.jobs/v2
      - SIMPLIFY_SITE_KEY=6LcStf4UAAAAAIVZo9JUJ3PntTfRBhvXLKBTGww8

      # Database configuration (PostgreSQL)
      - DATABASE_URL=postgresql://jobtrak_user:jobtrak_secure_password_2024@postgres:5432/jobtrak
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=jobtrak
      - POSTGRES_USER=jobtrak_user
      - POSTGRES_PASSWORD=jobtrak_secure_password_2024

      # Redis configuration
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CACHE_TTL=3600

      # LinkedIn credentials
      - LINKEDIN_EMAIL=saianantula007@outlook.com
      - LINKEDIN_PASSWORD=Saikowshik@2000

      # OpenAI configuration
      - OPENAI_API_KEY=your_openai_api_key
      - MODEL_PROVIDER=openai
      - MODEL_NAME=gpt-4.1-mini
      - MODEL_TEMPERATURE=0.3
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`jobtrackai.duckdns.org`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - "traefik.http.services.api.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.api.loadbalancer.healthcheck.interval=10s"

  # API Instance 3
  jobtrak-api-3:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: jobtrak-api-3
    volumes:
      - .:/app
      - ./database:/app/database
      - ./output:/app/output
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - jobtrak-network
    environment:
      # Application settings
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - API_DEBUG=1
      - HOST_IP=${HOST_IP:-auto-detect}

      # External services
      - SELENIUM_REMOTE_URL=http://selenium-chrome:4444/wd/hub
      - SIMPLIFY_JOBS_API_URL=https://api.simplify.jobs/v2
      - SIMPLIFY_SITE_KEY=6LcStf4UAAAAAIVZo9JUJ3PntTfRBhvXLKBTGww8

      # Database configuration (PostgreSQL)
      - DATABASE_URL=postgresql://jobtrak_user:jobtrak_secure_password_2024@postgres:5432/jobtrak
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=jobtrak
      - POSTGRES_USER=jobtrak_user
      - POSTGRES_PASSWORD=jobtrak_secure_password_2024

      # Redis configuration
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CACHE_TTL=3600

      # LinkedIn credentials
      - LINKEDIN_EMAIL=saianantula007@outlook.com
      - LINKEDIN_PASSWORD=Saikowshik@2000

      # OpenAI configuration
      - OPENAI_API_KEY=your_openai_api_key
      - MODEL_PROVIDER=openai
      - MODEL_NAME=gpt-4.1-mini
      - MODEL_TEMPERATURE=0.3
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`jobtrackai.duckdns.org`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - "traefik.http.services.api.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.api.loadbalancer.healthcheck.interval=10s"

  # Keep your existing single database
  postgres:
    image: postgres:15-alpine
    container_name: jobtrak-postgres
    environment:
      POSTGRES_DB: jobtrak
      POSTGRES_USER: jobtrak_user
      POSTGRES_PASSWORD: jobtrak_secure_password_2024
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - jobtrak-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobtrak_user -d jobtrak"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Keep your existing single Redis
  redis:
    image: redis:7-alpine
    container_name: jobtrak-redis
    command: >
      redis-server
      --appendonly yes
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jobtrak-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

networks:
  jobtrak-network:
    driver: bridge
    name: jobtrak-network

volumes:
  postgres_data:
    driver: local
    name: jobtrak-postgres-data
  redis_data:
    driver: local
    name: jobtrak-redis-data